https://editor.swagger.io/?_ga=2.7225397.680801212.1634664734-1781911807.1634664734

openapi: 3.0.1
info: 
  title: API locação de carros
  description: API para realizar locação de carros
  version: 0.0.1
  termsOfService: https://github.com/TallesECB
  contact:
    name: Suporte Dev Talles ECB
    email: teduardo13@hotmail.com
    url: https://github.com/TallesECB
  license:
    name: "Licença: GPLv3"
    url: https://www.gnu.org/licenses/gpl-3.0.html
externalDocs:
  description: Documentação
  url:  https://github.com/TallesECB/Compassolisa
servers: 
- url: https://6096015d116f3f00174b29ba.mockapi.io/
  description: API de teste
paths:
  /especialidades:
    get:
      summary: Recupera todas as especialidades cadastradas no banco de dados
      responses:
        200:openapi: 3.0.1
info:
  title: API de consultório
  description: API para controlar médicos e suas especialidades dentro do consultório.
  version: 0.0.1
  termsOfService: https://github.com/TallesECB
  contact:
    name: Suporte Dev Talles ECB
    email: teduardo13@hotmail.com
    url: https://mockapi.io
  license:
    name: "Lincença: GPLv3"
    url: https://github.com/TallesECB
externalDocs:
  description: Documentação burocrática
  url: https://github.com/TallesECB
servers:
- url: https://6096015d116f3f00174b29ba.mockapi.io/
  description: API de Teste
paths:
  /especialidades:
    get:
      summary: Recupera todas as especialidades
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  descricao:
                    type: string
    post:
      summary: Cria nova especialidade
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                descricao:
                  type: string
      responses:
        201:
          description: "Sucesso"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  descricao:
                    type: string
  /especialidades/{id}:
    parameters:
    - name: id
      in: path
      schema:
        type: integer
      required: true
    get:
      summary: Recupera uma entidade pelo ID
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  descricao:
                    type: string
        404:
          description: Especialidade não encontrada
          content:
            application/json:
              example: "Not Found"

ao inves de colocar o parametro em cima do verbo get
    parameters: 
    - name: id
      in: path
      schema:
        type: integer
    required: true
poderia por ele tbm dentro do verbo, mas ai a cada verbo eu teria que repetir esse parametro
porem como todos os verbos, put e get irão utilizar o ID, eu posso manter ele como se fosse uma variavel global ali