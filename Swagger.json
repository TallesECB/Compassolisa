{
  "openapi": "3.0.1",

  "info": {
    "title": "API locação de carros",
    "description": "API para realizar locação de carros",
    "version": "0.0.1",
    "termsOfService": "https://github.com/TallesECB",
    "contact":  {
      "name": "Suporte Dev Talles ECB",
      "email": "teduardo13@hotmail.com",
      "url": "https://github.com/TallesECB/Compassolisa"
    }
  },
  "servers": [
    {
        "url": "http://localhost:3000/",
        "description": "API de teste"
    }
  ],
  "paths": {
    "/api/v1/car": {
      "get": {
        "summary": "Pegar todos os Carros - ou filtrar",
        "tags": ["Carros"],
        "parameters": [
          {
            "in": "query",
            "name": "modelo",
            "schema": {
              "type": "string"
            },
            "description": "Filtrar um Carro pelo Modelo"
          },
          {
            "in": "query",
            "name": "cor",
            "schema": {
              "type": "string"
            },
            "description": "Filtrar Carros pela Cor"
          },
          {
            "in": "query",
            "name": "ano",
            "schema": {
              "type": "string"
            },
            "description": "Filtrar Carros pelo Ano"
          },
          {
            "in": "query",
            "name": "descricao",
            "schema": {
              "type": "string"
            },
              "description": "Filtrar Carros pela Descrição dos acessórios"
          },
          {
            "in": "query",
            "name": "quantidadePassageiros",
            "schema": {
              "type": "number"
            },
            "description": "Filtrar Carros pelo número de quantidade de passageiros"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            },
            "description": "Número de deslocamento - Opcional Padrão é 0"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            },
            "description": "Limite de retorno dos Carros - Opcional Padrão é 1000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cars"
                }
              }
            }
          },
          "400": {
            "description": "limitMaxPagination",
            "content": {
              "application/json": {
                "example": "O limite máximo da paginação é 1000, favor verificar"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Registrar um novo Carro",
        "tags": ["Carros"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Car"
              }
            }
          }
        },
        "description": "Registrando um novo Carro",
        "responses": {
          "201": {
            "description": "Successo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Car"
                }
              }
            }
          },
          "400": {
            "description": "Campo Inválido ou whithoutAccessory",
            "content": {
              "application/json": {
                "example": "Favor verifique os campos informados, e os que são requiridos!"
              }
            }
          }
        }
      }
    },
    "/api/v1/car/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "get": {
        "summary": "Pegar um Carro por ID",
        "tags": ["Carros"],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Car"
                }
              }
            }
          },
          "404": {
            "description": "idNotFound",
            "content": {
              "application/json": {
                "example": "Carro não encontrado"
              }
            }
          },
          "400": {
            "description": "invalidObjectID",
            "content": {
              "application/json": {
                "example": "O ID Inserido possui um formato inválido"
              }
            }
          }
        }
      }, 
      "put": {
        "summary": "Atualizar um Carro",
        "tags": ["Carros"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Car"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Car"
                }
              }
            }
          },
          "404": {
            "description": "idNotFound",
            "content": {
              "application/json": {
                "example": "Carro não encontrado"
              }
            }
          },
          "400": {
            "description": "Campo ou valor inválido ou invalidObjectId",
            "content": {
              "application/json": {
                "example": "Campo ou valor inválido ou o ID de busca está inválido"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletar um Carro",
        "tags": ["Carros"],
        "responses": {
          "204": {
            "description": "Successo"
          },
          "404": {
            "description": "idNotFound",
            "content": {
              "application/json": {
                "example": "Carro não encontrado"
              }
            }
          },
          "400": {
            "description": "invalidObjectID",
            "content": {
              "application/json": {
                "example": "O formato do ID inserido está inválido"
              }
            }
          }
        }
      }
    },
    "/api/v1/car/{id}/acessorios/{idAcessory}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "idAcessory",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "patch": {
        "summary": "Atualizar o Acessorio de um Carro",
        "tags": ["Carros"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Acessorio"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Car"
                }
              }
            }
          },
          "404": {
            "description": "idNotFound",
            "content": {
              "application/json": {
                "example": "Carro/Acessorio não encontrado"
              }
            }
          },
          "400": {
            "description": "Campo ou valor inválido ou invalidObjectId",
            "content": {
              "application/json": {
                "example": "Campo ou valor inválido ou o ID de busca está inválido"
              }
            }
          }
        }
      }
    }, 
    "/api/v1/people": {
      "get": {
        "summary": "Pegar todos os Usuários ou Filtrar",
        "tags": ["Pessoas"],
        "security": {"jwt": [] },
        "parameters": [
          {
            "in": "query",
            "name": "filtrar por nome",
            "schema": {
              "type": "string"
            },
            "description": "Nome - Usuário"
          },
          {
            "in": "query",
            "name": "filtrar por cpf",
            "schema": {
              "type": "string"
            },
            "description": "CPF - Usuário"
          },
          {
            "in": "query",
            "name": "filtrar por data_nascimento",
            "schema": {
              "type": "string"
            },
            "description": "Data de Nascimento - Usuário"
          },
          {
            "in": "query",
            "name": "filtrar por email",
            "schema": {
              "type": "string"
            },
            "description": "Email - Usuário"
          },
          {
            "in": "query",
            "name": "filtrar por habilitado",
            "schema": {
              "type": "string"
            },
            "description": "Se o Usuário possui habilitação"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            },
            "description": "Número de deslocamento - Opcional Padrão é 1"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            },
            "description": "Limite de retorno dos Usuários - Opcional Padrão é 1000"
          }
        ],
        "responses": {
          "200": {
            "description": "Successo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Peoples"
                }
              }
            }
          },
          "400": {
            "description": "limitMaxPagination",
            "content": {
              "application/json": {
                "example": "O limite máximo da paginação é 1000, favor verificar"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Registrar um novo Usuário",
        "tags": ["Pessoas"],
        "security": {"jwt": [] },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/People"
              }
            }
          }
        },
        "description": "Registrando um novo Usuário",
        "responses": {
          "201": {
            "description": "Successo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/People"
                }
              }
            }
          },
          "400": {
            "description": "Campo Inválido ou ungerAge",
            "content": {
              "application/json": {
                "example": "Campo inválido ou campo requirido não informado ou Usuário menor de idade!"
              }
            }
          },
          "409": {
            "description": "Conflito",
            "content": {
              "application/json": {
                "example": "Atributos CPF e Email devem ser unicos!"
              }
            }
          }
        }
      }
    },
    "/api/v1/people/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "get": {
        "summary": "Pegar um Usuário por ID",
        "tags": ["Pessoas"],
        "responses": {
          "200": {
            "description": "Successo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/People"
                }
              }
            }
          },
          "404": {
            "description": "idNotFound",
            "content": {
              "application/json": {
                "example": "Usuário não encontrado"
              }
            }
          },
          "400": {
            "description": "invalidObjectId",
            "content": {
              "application/json": {
                "example": "O formato do ID inserido está inválido, favor verificar"
              }
            }
          }
        }
      },
      "put": {
        "summary": "Atualizar um Usuário",
        "tags": ["Pessoas"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/People"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/People"
                }
              }
            }
          },
          "404": {
            "description": "idNotFound",
            "content": {
              "application/json": {
                "example": "Usuário não encontrado"
              }
            }
          },
          "400": {
            "description": "Campo ou Valor inválido ou invalidObjectID",
            "content": {
              "application/json": {
                "example": "Campo ou Valor estão inválidos ou o ID inserido está inválido"
              }
            }
          },
          "409": {
            "description": "Conflito",
            "content": {
              "application/json": {
                "example": "Atributos CPF e Email devem ser unicos!"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletar um Usuário",
        "tags": ["Pessoas"],
        "responses": {
          "204": {
            "description": "Successo"
          },
          "404": {
            "description": "idNotFound",
            "content": {
              "application/json": {
                "example": "Usuário não encontrado"
              }
            }
          },
          "400": {
            "description": "invalidObjectId",
            "content": {
              "application/json": {
                "example": "ID inválido, favor verificar"
              }
            }
          }
        }
      }
    },
    "/api/v1/authenticate": {
      "post": {
        "summary": "Autenticação de Usuários",
        "tags": ["Autenticação"],
        "security": {"jwt": [] },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "senha": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "description": "Autenticação",
        "responses": {
          "201": {
            "description": "Successo",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "authInvalid",
            "content": {
              "application/json": {
                "example": "Senha ou Email incorreto"
              }
            }
          } 
        }
      }
    },
    "/api/v1/rental": {
      "get": {
        "summary": "Pegar todos as Locadoras ou Filtrar",
        "tags": ["Locadoras"],
        "parameters": [
          {
            "in": "query",
            "name": "filtrar por Nome",
            "schema": {
              "type": "string"
            },
            "description": "Nome - Locadora"
          },
          {
            "in": "query",
            "name": "filtrar por CNPJ",
            "schema": {
              "type": "string"
            },
            "description": "CNPJ - Locadora"
          },
          {
            "in": "query",
            "name": "filtrar por Atividades",
            "schema": {
              "type": "string"
            },
            "description": "Atividades - Locadora"
          },
          {
            "in": "query",
            "name": "filtrar por Endereco - CEP",
            "schema": {
              "type": "string"
            },
            "description": "Cep - Locadora"
          },
          {
            "in": "query",
            "name": "filtrar por Number - Locadora",
            "schema": {
              "type": "string"
            },
            "description": "Number - Locadora"
          },
          {
            "in": "query",
            "name": "filtrar por isFilial - Locadora",
            "schema": {
              "type": "string"
            },
            "description": "isFilial - Locadora"
          },
          {
            "in": "query",
            "name": "filtrar por Logradouro - Locadora",
            "schema": {
              "type": "string"
            },
            "description": "Logradouro - Locadora"
          },
          {
            "in": "query",
            "name": "filtrar por Localidade - Locadora",
            "schema": {
              "type": "string"
            },
            "description": "Localidade - Locadora"
          },
          {
            "in": "query",
            "name": "filtrar por UF - Locadora",
            "schema": {
              "type": "string"
            },
            "description": "UF - Locadora"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            },
            "description": "Número de deslocamento - Opcional Padrão é 0"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            },
            "description": "Limite de retorno dos Usuários - Opcional Padrão é 1000"
          }
        ],
        "responses": {
          "200": {
            "description": "Successo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rentals"
                }
              }
            }
          },
          "400": {
            "description": "limitMaxPagination",
            "content": {
              "application/json": {
                "example": "O limite máximo da paginação é 1000, favor verificar"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Registrar uma nova Locadora",
        "tags": ["Locadoras"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rental"
              }
            }
          }
        },
        "description": "Registrando uma nova Rental",
        "responses": {
          "201": {
            "description": "Successo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rental"
                }
              }
            }
          },
          "400": {
            "description": "Campo Inválido ou CEP Invalid",
            "content": {
              "application/json": {
                "example": "Campo inválido ou campo requirido não informado ou CEP Inválido!"
              }
            }
          },
          "409": {
            "description": "Conflito",
            "content": {
              "application/json": {
                "example": "Atributos CNPJ e isFilial - False devem ser unico!"
              }
            }
          }
        }
      }
    },
    "/api/v1/rental/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "get": {
        "summary": "Pegar uma Locadora por ID",
        "tags": ["Locadoras"],
        "responses": {
          "200": {
            "description": "Successo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rental"
                }
              }
            }
          },
          "404": {
            "description": "idNotFound",
            "content": {
              "application/json": {
                "example": "Locadora não encontrado"
              }
            }
          },
          "400": {
            "description": "invalidObjectId",
            "content": {
              "application/json": {
                "example": "O formato do ID inserido está inválido, favor verificar"
              }
            }
          }
        }
      },
      "put": {
        "summary": "Atualizar uma Locadora",
        "tags": ["Locadoras"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rental"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rental"
                }
              }
            }
          },
          "404": {
            "description": "idNotFound",
            "content": {
              "application/json": {
                "example": "Locadora não encontrado"
              }
            }
          },
          "400": {
            "description": "Campo ou Valor inválido ou invalidObjectID",
            "content": {
              "application/json": {
                "example": "Campo ou Valor estão inválidos ou o ID inserido está inválido"
              }
            }
          },
          "409": {
            "description": "Conflito",
            "content": {
              "application/json": {
                "example": "Atributo CNPJ deve ser unico!"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletar uma Locadora",
        "tags": ["Locadoras"],
        "responses": {
          "204": {
            "description": "Successo"
          },
          "404": {
            "description": "idNotFound",
            "content": {
              "application/json": {
                "example": "Locadora não encontrada"
              }
            }
          },
          "400": {
            "description": "invalidObjectId",
            "content": {
              "application/json": {
                "example": "ID inválido, favor verificar"
              }
            }
          }
        }
      }
    },
    "/api/v1/rental/${id}/fleet": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "get": {
        "summary": "Pegar todos as Frotas ou Filtrar",
        "tags": ["Frotas"],
        "parameters": [
          {
            "in": "query",
            "name": "filtrar por ID Carro",
            "schema": {
              "type": "string"
            },
            "description": "id_carro - Frota, referenciando o id do carro"
          },
          {
            "in": "query",
            "name": "filtrar por ID Locadora",
            "schema": {
              "type": "string"
            },
            "description": "id_locadora - Frota, referenciando o id da locadora"
          },
          {
            "in": "query",
            "name": "filtrar por Status",
            "schema": {
              "type": "string"
            },
            "description": "Status - Frota"
          },
          {
            "in": "query",
            "name": "filtrar por Valor Diaria - Frota",
            "schema": {
              "type": "number"
            },
            "description": "Valor Diaria - Frota"
          },
          {
            "in": "query",
            "name": "filtrar por Placa - Frota",
            "schema": {
              "type": "string"
            },
            "description": "Placa - Frota"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            },
            "description": "Número de deslocamento - Opcional Padrão é 0"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            },
            "description": "Limite de retorno dos Usuários - Opcional Padrão é 1000"
          }
        ],
        "responses": {
          "200": {
            "description": "Successo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fleets"
                }
              }
            }
          },
          "400": {
            "description": "limitMaxPagination",
            "content": {
              "application/json": {
                "example": "O limite máximo da paginação é 1000, favor verificar"
              }
            }
          },
          "404": {
            "description": "Query Not Found",
            "content": {
              "application/json": {
                "example": "Não foi encontrada Frota com está query"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Registrar uma nova Frota",
        "tags": ["Frotas"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Fleet"
              }
            }
          }
        },
        "description": "Registrando uma nova Frota",
        "responses": {
          "201": {
            "description": "Successo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fleet"
                }
              }
            }
          },
          "400": {
            "description": "Campo Inválido",
            "content": {
              "application/json": {
                "example": "Campo inválido ou campo requirido não informado!"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "ID Rental ou ID Carro não encontrado,"
              }
            }
          },
          "409": {
            "description": "Conflito",
            "content": {
              "application/json": {
                "example": "Atributos duplicados!"
              }
            }
          }
        }
      }
    },
    "/api/v1/rental/{id}/fleet/{idFleet}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "idFleet",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "get": {
        "summary": "Pegar uma Frota por ID",
        "tags": ["Frotas"],
        "responses": {
          "200": {
            "description": "Successo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fleet"
                }
              }
            }
          },
          "404": {
            "description": "idNotFound",
            "content": {
              "application/json": {
                "example": "Frota ou Locadora não encontrado"
              }
            }
          },
          "400": {
            "description": "invalidObjectId",
            "content": {
              "application/json": {
                "example": "O formato do ID inserido está inválido, favor verificar"
              }
            }
          }
        }
      },
      "put": {
        "summary": "Atualizar uma Frota",
        "tags": ["Frotas"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Fleet"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fleet"
                }
              }
            }
          },
          "404": {
            "description": "idNotFound",
            "content": {
              "application/json": {
                "example": "Frota ou Locadora ou Carro não encontrado"
              }
            }
          },
          "400": {
            "description": "Campo ou Valor inválido ou invalidObjectID",
            "content": {
              "application/json": {
                "example": "Campo ou Valor estão inválidos ou o ID inserido está inválido"
              }
            }
          },
          "409": {
            "description": "Conflito",
            "content": {
              "application/json": {
                "example": "Atributo Placa deve ser unico!"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletar uma Frota",
        "tags": ["Frotas"],
        "responses": {
          "204": {
            "description": "Successo"
          },
          "404": {
            "description": "idNotFound",
            "content": {
              "application/json": {
                "example": "Frota ou Locadora não encontrada"
              }
            }
          },
          "400": {
            "description": "invalidObjectId",
            "content": {
              "application/json": {
                "example": "ID inválido, favor verificar"
              }
            }
          }
        }
      }
    },
    "/api/v1/rental/${id}/reserve": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "get": {
        "summary": "Pegar todos as Reservas ou Filtrar",
        "tags": ["Reservas"],
        "parameters": [
          {
            "in": "query",
            "name": "filtrar por ID User",
            "schema": {
              "type": "string"
            },
            "description": "id_user - Reserva, referenciando o id do usuário que está autenticado no sistema"
          },
          {
            "in": "query",
            "name": "filtrar por Data Inicio",
            "schema": {
              "type": "string"
            },
            "description": "data_inicio - Reserva"
          },
          {
            "in": "query",
            "name": "filtrar por Data Fim",
            "schema": {
              "type": "string"
            },
            "description": "data_fim - Reserva"
          },
          {
            "in": "query",
            "name": "filtrar por ID Carro ",
            "schema": {
              "type": "string"
            },
            "description": "id_carro - Reserva, referenciando o id da frota."
          },
          {
            "in": "query",
            "name": "filtrar por ID Locadora",
            "schema": {
              "type": "string"
            },
            "description": "id_locadora - Reserva, referenciando o id da locadora"
          },
          {
            "in": "query",
            "name": "filtrar por Valor Final ",
            "schema": {
              "type": "number"
            },
            "description": "valor_final - Reserva"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            },
            "description": "Número de deslocamento - Opcional Padrão é 0"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            },
            "description": "Limite de retorno dos Usuários - Opcional Padrão é 1000"
          }
        ],
        "responses": {
          "200": {
            "description": "Successo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reserves"
                }
              }
            }
          },
          "400": {
            "description": "limitMaxPagination",
            "content": {
              "application/json": {
                "example": "O limite máximo da paginação é 1000, favor verificar"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "Query Não Encontrada"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Registrar uma nova Reserva",
        "tags": ["Reservas"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Reserve"
              }
            }
          }
        },
        "description": "Registrando uma nova Reserva",
        "responses": {
          "201": {
            "description": "Successo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reserve"
                }
              }
            }
          },
          "400": {
            "description": "Campo Inválido",
            "content": {
              "application/json": {
                "example": "Campo inválido ou campo requirido não informado!"
              }
            }
          },
          "409": {
            "description": "Conflito",
            "content": {
              "application/json": {
                "example": "Data de reserva está em conflito"
              }
            }
          }
        }
      }
    },
    "/api/v1/rental/{id}/reserve/{idReserva}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "idReserva",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "get": {
        "summary": "Pegar uma Reserva por ID",
        "tags": ["Reservas"],
        "responses": {
          "200": {
            "description": "Successo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reserva"
                }
              }
            }
          },
          "404": {
            "description": "idNotFound",
            "content": {
              "application/json": {
                "example": "Reserva ou Locadora ou Carro não encontrada"
              }
            }
          },
          "400": {
            "description": "invalidObjectId",
            "content": {
              "application/json": {
                "example": "O formato do ID inserido está inválido, favor verificar"
              }
            }
          }
        }
      },
      "put": {
        "summary": "Atualizar uma Reserva",
        "tags": ["Reservas"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Reserva"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reserva"
                }
              }
            }
          },
          "404": {
            "description": "idNotFound",
            "content": {
              "application/json": {
                "example": "Reserva ou Locadora ou Carro não encontrada"
              }
            }
          },
          "400": {
            "description": "Campo ou Valor inválido",
            "content": {
              "application/json": {
                "example": "Campo ou Valor estão inválidos ou o ID inserido está inválido"
              }
            }
          },
          "409": {
            "description": "Conflito",
            "content": {
              "application/json": {
                "example": "Data de reserva está em conflito!"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletar uma Reserva",
        "tags": ["Reservas"],
        "responses": {
          "204": {
            "description": "Successo"
          },
          "404": {
            "description": "idNotFound",
            "content": {
              "application/json": {
                "example": "Reserva ou Locadora não encontrada"
              }
            }
          },
          "400": {
            "description": "invalidObjectId",
            "content": {
              "application/json": {
                "example": "ID inválido, favor verificar"
              }
            }
          }
        }
      }
    } 
  },
  "components": {
    "schemas": {
      "People": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string"
          },
          "cpf": {
            "type": "string"
          },
          "data_nascimento": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "senha": {
            "type": "string"
          },
          "habilitado": {
            "type": "string",
            "enum": [
              "sim",
              "não"
            ]
          }
        }
      },
      "Peoples": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/People"
        }
      },
      "Car": {
        "type": "object",
        "properties": {
          "modelo": {
            "type": "string"
          },
          "cor": {
            "type": "string"
          },
          "ano": {
            "type": "number"
          },
          "acessorios": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "descricao": {
                  "type": "string"
                }
              }
            }  
          },
          "quantidadePassageiros": {
            "type": "number"
          }
        }
      },
      "Cars": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Car"
        }
      },
      "Rental": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string"
          },
          "cnpj": {
            "type": "string"
          },
          "atividades": {
            "type": "string"
          },
          "endereco": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "cep": {
                  "type": "string"
                },
                "complemento": {
                  "type": "string"
                },
                "number": {
                  "type": "string"
                },
                "isFilial": {
                  "type": "boolean"
                }
              }
            }  
          }
        }
      },
      "Rentals": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Rental"
        }
      },
      "Fleet": {
        "type": "object",
        "properties": {
          "id_carro": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "valor_diaria": {
            "type": "number"
          },
          "placa": {
            "type": "string"
          }
        }
      },
      "Fleets": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Fleet"
        }
      },
      "Reserve": {
        "type": "object",
        "properties": {
          "data_inicio": {
            "type": "string"
          },
          "data_fim": {
            "type": "string"
          },
          "id_carro": {
            "type": "string"
          }
        }
      },
      "Reserves": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Reserves"
        }
      },
      "Acessorio": {
        "type": "object",
        "properties": {
          "descricao": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "jwt": {
        "type": "http",
        "scheme": "bearer",
        "in": "header",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [{
    "jwt": []
  }]
}